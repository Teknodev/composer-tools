@use '../../../composer-base-components/base/utitilities/viewports.module.scss' as *;

@keyframes fadeInFromRight {
  0% {
    opacity: 0;
    transform: translateX(25%);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.container {
  position: relative;

  &::before {
    content: " ";
    position: absolute;
    top: 0px;
    left: 0px;
    background-color: color-mix(in srgb, var(--composer-html-background), var(--composer-font-color-primary) 5%);
    height: 80%;
    width: 100%;
  }

  .max-content {
    position: relative;
    z-index: 1;

    .wrapper {
      .left-page {
        display: flex;

        .image {
          width: 70%;
          border-radius: var(--composer-border-radius-md);
          object-fit: cover;
          animation: fadeInFromRight 1s ease-out forwards;

          &.no-animation {
            animation: unset;
          }
        }
      }

      .right-page {
        .right-content {
          height: 100%;
          display: flex;
          flex-direction: column;
          justify-content: center;

          .title, .subtitle {
            content: "";
          }

          .input-button-wrapper {
            display: flex;
            width: 100%;
            align-items: stretch;
            gap: var(--composer-gap-md);

            .input-div {
              display: flex;
              gap: var(--composer-gap-md);
              position: relative;

              .input {
                flex: 5;
                height: auto;
                border-style: none;
                outline: none;
                transition: border-color 0.3s ease;
                width: 100%;
                padding: var(--composer-gap-md);
                border-radius: var(--composer-border-radius-sm);
                background-color: var(--composer-html-background);
                color: var(--composer-font-color-primary);

                &::placeholder {
                  font-size: 1rem;
                  color: var(--composer-font-color-primary);
                }

                &:focus::placeholder {
                  opacity: 0.5;
                }
              }

              .error {
                position: absolute;
                bottom: -20px;
                left: 0;
                color: var(--warning);
              }

              .button {
                content: "";
                .button-text {
                  content: "";
                }
              }
            }
          }
        }
      }
    }
  }

  &.no-image {
    &::before {
      height: 100%;
    }
  }
}

@container (max-width: #{$composer-tablet-width}) {
  .container {
    .max-content {
      .wrapper {
        flex-direction: column-reverse;
      }

    }
  }
}

@container (max-width: #{$composer-phone-width}) {
  .container {
    .max-content {
      .wrapper {
        .left-page {
          .image {
            width: 90%;
          }
        }

        .right-page {
          .right-content {
            .input-button-wrapper {
              .input-div {
                .input {
                  flex: 1;
                }

                .button {
                  flex: 1;
                }
              }
            }
          }
        }
      }
    }
  }
}