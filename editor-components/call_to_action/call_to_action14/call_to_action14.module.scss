@use '../../../composer-base-components/base/utitilities/viewports.module.scss' as *;
.container {
    .max-content {
        display: flex;
        flex-direction: column;
        gap: var(--composer-gap-md);
        transition: all 0.3s ease;

        &[data-animation~="animate1"] {
            &:hover {
                transform: translateY(-10px) scale(1.1);

                .title, .description, .button-container {
                    transform: translateY(-5px);
                }
            }

            .title, .description, .button-container {
                transition: transform 0.3s ease;
            }
        }

        &[data-animation~="animate2"] {
            &:hover {
                .title {
                    transform: scale(1.05);
                    color: var(--composer-primary-color);
                    transition-delay: 0s;
                }

                .description {
                    transform: scale(1.02);
                    color: color-mix(in srgb, var(--composer-primary-color) 70%, var(--composer-font-color-primary));
                    transition-delay: 0.1s;
                }

                .button-container {
                    transform: scale(1.05);
                    transition-delay: 0.2s;
                }
            }

            .title, .description, .button-container {
                transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            }

            .button {
                transition: box-shadow 0.4s ease;
            }
        }

        &[data-animation~="animate3"] {
            &:hover {
                .title {
                    animation: bounceAndGlow 1s ease-in-out;
                    color: var(--composer-primary-color);
                }

                .description {
                    animation: waveText 1.2s ease-in-out;
                }

                .button-container {
                    animation: pulseAndFloat 1.5s ease-in-out infinite;
                    
                    .button {
                        background: linear-gradient(
                            270deg,
                            var(--composer-primary-color),
                            color-mix(in srgb, var(--composer-primary-color) 80%, white),
                            var(--composer-primary-color)
                        );
                        background-size: 200% 100%;
                        animation: gradientMove 2s linear infinite;
                    }
                }
            }
        }

        .title {
            margin: 0px;
            text-align: center;
        }
        .description {
            margin: 0px;
            text-align: center;
        }
        .button-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: var(--composer-gap-sm);
            .button{
                content: "";
            }
        }
    }
}

@container (max-width: #{$composer-tablet-width}) {
    .container {
        .max-content {
            .heading-page {
                .heading {
                    min-width: auto !important;
                }
                .button-container {
                    .button, .button-reverse {
                        width: 100%;
                    }
                }
            }
        }
    }
}

@keyframes bounceAndGlow {
    0%, 100% {
        transform: scale(1) rotate(0deg);
    }
    30% {
        transform: scale(1.1) rotate(-2deg);
    }
    60% {
        transform: scale(1.05) rotate(2deg);
    }
    80% {
        transform: scale(1.02) rotate(-1deg);
    }
}

@keyframes waveText {
    0%, 100% {
        transform: translateY(0);
    }
    25% {
        transform: translateY(calc(var(--composer-gap-sm) * -1)) translateX(var(--composer-gap-xs));
    }
    50% {
        transform: translateY(0) translateX(calc(var(--composer-gap-xs) * -1));
    }
    75% {
        transform: translateY(var(--composer-gap-sm)) translateX(var(--composer-gap-xs));
    }
}

@keyframes pulseAndFloat {
    0%, 100% {
        transform: translateY(0) scale(1);
    }
    50% {
        transform: translateY(calc(var(--composer-gap-sm) * -1)) scale(1.05);
    }
}

@keyframes gradientMove {
    0% {
        background-position: 0% 50%;
    }
    100% {
        background-position: 200% 50%;
    }
}

