@use '../../../composer-base-components/base/utitilities/viewports.module.scss' as *;

.container {
  position: relative;
}

.max-content {
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: center; // Her zaman center - İstek 4
  align-items: center;
  width: 100%;
}

.content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  gap: var(--composer-gap-xl); // Text ve button arası daha fazla boşluk - İstek 3
  
  @container (max-width: #{$composer-tablet-width}) {
    // Tablet'te aynı satırda kalması için justify-content: space-between korundu - İstek 5
    gap: var(--composer-gap-lg);
  }
  
  @container (max-width: #{$composer-phone-width}) {
    flex-direction: column; // Mobile'da alt alta
    align-items: center;
    gap: var(--composer-gap-md);
  }
}

.text-container {
  
  justify-content: center;
  display: flex;
  align-items: center; // Text'i button ile aynı hizada ortalamak için - İstek 4
  max-width: 550px;
  
  @container (max-width: #{$composer-phone-width}) {
    justify-content: center; // Mobile'da text ortalanır - İstek 6

  }
  @container (max-width: #{$composer-tablet-width}){
    text-align: left;
  }
}

.text {
  margin: 0; // Base margin'ları sıfırla
  text-align: left; // Desktop'da sol hizalı
  
  @container (max-width: #{$composer-phone-width}) {
    text-align: center; // Mobile'da ortalanır - İstek 6
    
    
  }
  @container (max-width: #{$composer-tablet-width}){
    
  }
  
}

.button-container {
  display: flex;
  gap: var(--composer-gap-md);
  align-items: center;
   
  
  justify-content: center;
}

.button {
  // Base.Button'a ekstra stil eklenmedi - İstek 5
  // Sadece gerekli durumlar için override
}

.button-text {
  // Button text için class eklendi - İstek 8
  // Gerekirse burada button text stilleri eklenebilir
}