@use "../../../composer-base-components/base/utitilities/viewports.module.scss"
  as *;
.container {
  font-size: 5em;
  &[data-animation~="animate4"] {
    &:hover {
      .button {
        animation: breathing 2s ease-out infinite normal;
      }
    }
  }

  .max-content {
    display: flex;
    flex-direction: column;
    .wrapper {
      display: flex;
      flex-direction: column;
      gap: var(--composer-gap-md);
      .up-container {
        .title {
          content: "";
        }
        .description {
          content: "";
        }
      }

      .cards-box {
        .card {
          border-radius: var(--radius-medium);
          overflow: hidden;
          position: relative;
          cursor: pointer;
          height: 350px;
          max-height: 350px;
          transition: all 0.3s ease-in-out;
          &[data-animation~="animate5"] {
            &:hover {
              box-shadow: var(--box-shadow-active);
            }
          }
          .card-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: all 0.5s ease;
            height: 100%;
          }
          .overlay,
          .overlay2 {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            transition: all 0.5s ease;
          }
          .overlay {
            background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
            z-index: 1;
            opacity: 1;
          }
          .overlay2 {
            background: linear-gradient(
              (rgba(var(--composer-primary-color-rgb), 0.7), rgba(0, 0, 0, 0.7))
            );
            z-index: 2;
            opacity: 0;
          }
          &[data-animation~="animate1"]:hover {
            .card-image {
              transform: scale(1.1);
            }
          }
          &[data-animation~="animate2"]:hover {
            transform: translateY(calc(var(--composer-gap-sm) * -1));
          }
          &[data-animation~="animate3"]:hover {
            .overlay {
              opacity: 0;
            }
            .overlay2 {
              opacity: 1;
            }
            .card-content .labels .second {
              opacity: 1;
              background: var(--composer-primary-color);
            }
          }
          .card-content {
            position: absolute;
            left: var(--composer-gap-md);
            bottom: var(--composer-gap-md);
            display: flex;
            color: white;
            z-index: 4;

            .stick {
              width: var(--composer-gap-xs);
              background: var(--composer-primary-color);
              margin-right: var(--composer-gap-md);
              border-radius: var(--radius-medium);
            }

            .labels {
              display: flex;
              flex-direction: column;
              align-items: start;

              .first {
                font-size: 1.5rem;
              }

              .second {
                display: flex;
                gap: var(--composer-gap-xs);
                margin: var(--composer-gap-xs) 0;
                background: rgba(var(--composer-primary-color-rgb), 0.5);
                padding: var(--composer-gap-xs) var(--composer-gap-xs);
                border-radius: var(--radius-medium);
                transition: all 0.3s ease;
                .second-text,
                .second-count {
                  color: var(--composer-font-color-secondary);
                  font-size: 1rem;
                }
              }
            }
          }
        }
      }
      .button-wrapper {
        display: flex;
        justify-content: center;
        .button {
          content: "";
        }
      }
    }
  }
}
@container (max-width: #{$composer-phone-width}) {
  .container {
    font-size: 1em;
    .max-content {
      .wrapper {
        .cards-box {
          .card {
            height: 300px;
            max-height: 300px;
          }
        }
      }
    }
  }
}

@keyframes breathing {
  0% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }

  25% {
    -webkit-transform: scale(1.05);
    -ms-transform: scale(1.05);
    transform: scale(1.05);
  }

  60% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }

  100% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }
}
