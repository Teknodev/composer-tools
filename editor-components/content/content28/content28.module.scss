@use '../../../composer-base-components/base/utitilities/viewports.module.scss' as *;

.container {
  .max-content {
    margin: 0 auto; // center within Base.Container like other contents
    min-height: unset; // let height follow content similar to content21
    --c28-scale: 1.3; // Scale factor for responsive font sizing

    // Main layout aligned with content10: two flex columns
    .grid {
      display: flex;
      gap: var(--composer-gap-lg); // follow global spacing scale
      align-items: stretch; // make both columns equal height
      > * { min-width: 0; }
    }

    // Keep editor alignment controls effective on tablet/mobile
    // Do not force text alignment here; rely on Base container alignment classes

    // Layout with vertical divider line (fixed width divider)
    .has-line {
      .center-line { flex: 0 0 2px; }
    }
    
    // Vertical divider between image and content
    .center-line { 
      width: 0.125rem; 
      background-color: var(--composer-border-color, rgba(0,0,0,0.08)); 
    }

    // Image column container
    .col-image {
      flex: 0 0 min(28rem, 34%); // smaller, proportional image column
      background: var(--composer-background-color);
      padding: 0;
      position: relative;
      height: auto; // follow intrinsic image height like content21
      overflow: hidden;
      border: 0.0625rem solid rgba(0,0,0,0.06);
      border-radius: 0.25rem;
    }

    // Image element with smooth zoom effect
    .image {
      width: 100%;
      height: 100%; // fill column height when columns are stretched
      display: block;
      object-fit: cover; // fill without leaving gap
      object-position: center; // keep subject centered
      transition: transform .35s ease, filter .35s ease;
    }

    // Hover effect: subtle zoom and brightness
    .col-image:hover .image {
      transform: scale(1.035);
      filter: brightness(1.02);
      cursor: pointer;
    }

    // Content column with header and features
    .col-content {
      flex: 1 1 0%; // take remaining space next to fixed image column
      display: flex;
      flex-direction: column;
        gap: var(--composer-gap-lg); // slightly tighter to match layout
      min-width: 0; // Prevent overflow
      min-height: auto; // do not force a taller column than needed
      align-items: stretch; // make children take full width of column
      justify-content: flex-start; // avoid large vertical whitespace; stack naturally
      text-align: inherit; // follow Base alignment

      // Header section should not be centered
      .header {
        align-items: inherit;
        text-align: inherit;
        margin: 0; // remove extra spacing
        display: flex;
        flex-direction: column;
        gap: clamp(1.3rem, 2vw, 2.1rem); // tighter spacing between title and intro
        // neutralize Base.VerticalContent automatic margins between children
        > * { margin-bottom: 0 !important; }
      }

      // Explicitly left-align heading and intro texts
      .heading {
        text-align: inherit;
        margin: 0;
        font-size: clamp(1.45rem, 1.9vw, 2.35rem);
        line-height: 1.1;
        letter-spacing: -0.02em;
        font-weight: 500; // strong headline as in reference
        white-space: pre-line; // allow line breaks in text
        // Color is controlled by Base's theme (.colorful / .monochrome)
      }
      // When editor View Type is 'colorful', force SectionTitle to primary color even if this
      // module adds an extra class on the heading. Use :global to reach Base's theme class.
      :global(.colorful) :global(.sectionTitle).heading { color: var(--composer-primary-color) !important; }
      // Ensure we override Base.SectionTitle default sizing
      :global(.sectionTitle).heading { font-size: clamp(1.45rem, 1.9vw, 2.35rem) !important; line-height: 1.1 !important; }
      .intro {
        text-align: inherit;
        margin: 0; // spacing handled by header gap
        font-size: clamp(0.95rem, 1.15vw, 1.25rem); // slightly smaller intro
        line-height: 1.55;
        color: var(--composer-tertiary-color); // theme-driven color like content3
        max-width: 72ch;
      }
      // Ensure we override Base.SectionDescription default sizing
      :global(.sectionDescription).intro { font-size: clamp(0.95rem, 1.15vw, 1.25rem) !important; }

      // Features container
      .features-block {
        display: flex;
        flex-direction: column;
        gap: 0; // spacing handled inside
        margin-top: auto; // push features to bottom to end aligned with image box
        padding-top: clamp(4rem, 6vw, 5rem); // increased space from intro again
        margin-bottom: 0; // avoid extra space below

        // Fixed two-column grid
        .features {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          column-gap: clamp(2rem, 3.2vw, 4rem); // spacing similar to reference
          row-gap: clamp(1.25rem, 2.2vw, 1.9rem); // more vertical spacing between features
          max-width: 65rem; // prevent over-expansion on ultra-wide
          align-items: start;

          .feature {
            // Feature title with scale animation
            // neutralize Base.VerticalContent automatic margins between children
            > * { margin-bottom: 0 !important; }
            .feature-title {
              font-size: clamp(1.2rem, 1.5vw, 1.9rem); // slightly larger for balance
              font-weight: 700;
              text-align: left;
              color: var(--composer-primary-color); // theme primary color for headings
              padding: 0;
              margin: 0 0 clamp(0.5rem, 0.8vw, 0.9rem) 0; // space between title and paragraph
              transform: none;
              cursor: pointer;
              transition: transform 0.3s ease;
              background: transparent !important; // remove badge-like backgrounds
              box-shadow: none !important;
              
              // Scale up on hover
              &:hover {
                transform: scale(1.1);
              }
              
              // Remove default pseudo-element
              &::before {
                display: none;
                content: none;
              }
              &::after {
                display: none;
                content: none;
              }
            }

            // Feature description text
            .feature-text {
              margin: 0.35rem 0 0 0; // space between title and text
              padding: 0;
              color: var(--composer-tertiary-color); // match intro color, theme-driven
              text-align: inherit;
              font-size: clamp(1.3rem, 1.5vw, 1.6rem); // slightly reduced from previous
              line-height: 1.78; // maintain readability
              max-width: 38ch; // narrower width to wrap more and increase height
              
            }
            // Ensure no unexpected bottom margin affects final alignment
            &:last-child {
              .feature-text { margin-bottom: 0; }
            }
          }
        }
      }
    }
  }
}

// Extra-robust tablet range to ensure overrides apply in all contexts
@media (min-width: 768px) and (max-width: 1200px) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: 3.2rem !important; }
        .intro { font-size: 2.1rem !important; line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 2.1rem !important; }

      .features {
        .feature-title { font-size: 1.05rem !important; }
        .feature-text { font-size: 0.92rem !important; line-height: 1.6; }
      }
    }
  }
}

// Fallback for environments where container queries are not active: use viewport media queries
@media (max-width: 1024px) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: 3.2rem !important; }
        .intro { font-size: 1.6rem !important; line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 1.6rem !important; }

      .features-block { margin-top: 0; padding-top: clamp(1rem, 2.5vw, 1.5rem); }
      .features { 
        grid-template-columns: 1fr 1fr; 
        column-gap: clamp(1rem, 3vw, var(--composer-gap-xl));
        row-gap: clamp(0.75rem, 2.5vw, var(--composer-gap-md));
        .feature-title { font-size: 1.25rem !important; }
        .feature-text { font-size: 1.4rem !important; max-width: 46ch; line-height: 1.6; }
      }

      // Respect editor alignment on viewport-fallback tablet
      :global(.container.left) { .max-content { .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: left !important; align-items: flex-start !important; } } }
      :global(.container.center) { .max-content { .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: center !important; align-items: center !important; } .features { justify-items: center; } } }
    }
  }
}

@media (max-width: 640px) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: clamp(2.2rem, 7vw, 2.8rem); }
        .intro { font-size: clamp(1.6rem, 5.5vw, 1.9rem); line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: clamp(2.4rem, 8vw, 3rem) !important; }
      :global(.sectionDescription).intro { font-size: clamp(1.75rem, 6vw, 2.1rem) !important; }

      .features-block { margin-top: 0; padding-top: clamp(1rem, 4vw, 1.25rem); }
      .features {
        width: 100%;
        gap: var(--composer-gap-sm);
        grid-template-columns: minmax(0, 1fr) !important;
        grid-auto-flow: row;
        .feature-title { font-size: clamp(0.95rem, 4vw, 1.1rem) !important; }
        .feature-text { font-size: clamp(0.8rem, 3vw, 0.95rem) !important; max-width: 100%; line-height: 1.6; }
      }
    }
  }
}

// Large container tweaks (e.g., Full width): bump typography sizes
@container (min-width: 1400px) {
  .container {
    .max-content {
      .col-content {
        .heading {
          font-size: clamp(2.3rem, 3.2vw, 5rem);
        }
        .intro {
          font-size: clamp(1.2rem, 1.6vw, 2rem);
        }
        .features {
          .feature-title {
            font-size: clamp(1.2rem, 1.5vw, 2rem);
          }
          .feature-text {
            font-size: clamp(1rem, 1.2vw, 1.3rem);
          }
        }
      }
    }
  }
}

// Tablet responsive styles
@container (max-width: #{$composer-tablet-width}) {
  .container {
    .max-content {
      min-height: unset;
      --c28-scale: 1; // Normalize scale for tablet

      .grid {
        gap: var(--composer-gap-lg);
        flex-direction: row; // keep desktop-like two-column layout on tablet
        align-items: stretch;
      }

      .col-image {
        height: auto;
        border: 0.0625rem solid rgba(0,0,0,0.06); // match desktop border
        align-self: stretch;
        flex: 0 0 min(24rem, 40%);
      }
      .image { height: 100%; width: 100%; aspect-ratio: auto; object-fit: cover; }

      .col-content { min-height: auto; width: auto; flex: 1 1 0%; }

      // Typography for tablet: match reference ratio
      .heading { font-size: 3.2rem !important; }
      .intro { font-size: 1.6rem !important; line-height: 1.6; }
      // Ensure override against Base component !important rules
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 1.6rem !important; }

      // On stacked layout do not push features to column bottom
      .features-block { margin-top: 0; padding-top: clamp(1rem, 2.5vw, 1.5rem); }

      // Two columns for features under centered image
      .features { 
        grid-template-columns: 1fr 1fr;
        column-gap: clamp(1rem, 3vw, var(--composer-gap-xl));
        row-gap: clamp(0.75rem, 2.5vw, var(--composer-gap-md));
        // Smaller feature texts for clearer hierarchy
        .feature-title { font-size: 1.25rem !important; }
        .feature-text { font-size: 1.4rem !important; max-width: 46ch; line-height: 1.6; }
        // Ensure Base typographic classes do not override (correct combined selectors)
        .feature-title:global(.sectionSubTitle) { font-size: 1.25rem !important; }
        .feature-text:global(.p) { font-size: 1.4rem !important; line-height: 1.6 !important; }
      }

      // Alignment from editor (using global .left/.center on an ancestor) — CSS Modules safe using '&'
      :global(.left) & {
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: left !important; align-items: flex-start !important; }
      }
      :global(.center) & {
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: center !important; align-items: center !important; }
        .features { justify-items: center; }
      }

      // Respect editor alignment on tablet
      :global(.container.left) {
        .max-content {
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: left !important; align-items: flex-start !important; }
        }
      }
      :global(.container.center) {
        .max-content {
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: center !important; align-items: center !important; }
          .features { justify-items: center; }
        }
      }
    }
  }
}

// Mobile responsive styles
@container (max-width: #{$composer-phone-width}) {
  .container {
    .max-content {
      min-height: unset;
      --c28-scale: 1; // Normal scale for mobile

      // Stack layout: image on top, content below
      .grid {
        flex-direction: column; // stack vertically on mobile
        gap: var(--composer-gap-md);
      }

      .center-line { display: none; } // Hide divider on mobile

      // Apply content3-like image box behaviour
      .col-image {
        order: -1; // Image first
        height: auto;
        width: 100%;
        padding: 0;
        margin: 0;
        border: none;
        border-radius: var(--composer-border-radius-md);
        overflow: hidden; // ensure image fills without gaps
      }
      .image { width: 100%; height: auto; aspect-ratio: 1; object-fit: cover; display: block; }

      .col-content { min-height: auto; }

      // Compact typography on mobile: bigger heading/intro, smaller features
      .heading { font-size: clamp(2.8rem, 9vw, 3.4rem); }
      .header { gap: clamp(0.6rem, 2.5vw, 1rem); }
      .intro { font-size: clamp(1.75rem, 6vw, 2.1rem); line-height: 1.6; }
      // Ensure override against Base component !important rules
      :global(.sectionTitle).heading { font-size: clamp(2.8rem, 9vw, 3.4rem) !important; }
      :global(.sectionDescription).intro { font-size: clamp(1.9rem, 6.8vw, 2.3rem) !important; }

      // Do not pin features to bottom on mobile; keep natural flow
      .features-block { margin-top: 0; padding-top: clamp(1rem, 4vw, 1.25rem); }

      // Single column for features with reduced gap (force single column)
      .features {
        width: 100%;
        gap: var(--composer-gap-sm);
        grid-template-columns: minmax(0, 1fr) !important; // ensure one column even if prop sets 2
        grid-auto-flow: row;
        .feature-title { font-size: clamp(1.05rem, 4.8vw, 1.25rem) !important; }
        .feature-text { font-size: clamp(1rem, 4.2vw, 1.2rem) !important; max-width: 100%; line-height: 1.65; }
      }
      .feature {
        align-items: flex-start;
        text-align: left;
        max-width: 65ch; // readable line length
      }

      // Alignment from editor on mobile
      :global(.left) & { .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: left !important; align-items: flex-start !important; } }
      :global(.center) & { .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { text-align: center !important; align-items: center !important; } .features { justify-items: center; } }
    }
  }
}
