@use '../../../composer-base-components/base/utitilities/viewports.module.scss' as *;

// Main container for content28 component
.container {
  .max-content {
    margin: 0 auto; // Center content within Base.Container
    min-height: unset; // Let height follow content naturally
    --c28-scale: 1.3; // Scale factor for responsive font sizing

    // Two-column flex layout: image and content
    .grid {
      display: flex;
      gap: var(--composer-gap-lg); // Use global spacing scale
      align-items: stretch; // Make both columns equal height
      > * { min-width: 0; } // Prevent flex item overflow
    }

    // Image column container
    .col-image {
      flex: 0 0 min(28rem, 34%); // Fixed width, proportional to container
      background: var(--composer-background-color);
      padding: 0;
      position: relative;
      height: auto; // Follow intrinsic image height
      overflow: hidden;
      border: 0.0625rem solid rgba(0,0,0,0.06);
      border-radius: 0.25rem;
    }

    // Profile image with hover effects
    .image {
      width: 100%;
      height: 100%; // Fill column height when stretched
      display: block;
      object-fit: cover; // Fill container without gaps
      object-position: center; // Keep subject centered
      transition: transform 0.35s ease, filter 0.35s ease;
    }

    // Hover effect: subtle zoom and brightness increase
    .col-image:hover .image {
      transform: scale(1.035);
      filter: brightness(1.02);
      cursor: pointer;
    }

    // Content column with header and features
    .col-content {
      flex: 1 1 0%; // Take remaining space next to fixed image column
      display: flex;
      flex-direction: column;
      gap: var(--composer-gap-lg); // Spacing between header and features
      min-width: 0; // Prevent overflow
      min-height: auto; // Don't force taller column than needed
      align-items: stretch; // Make children take full width of column
      justify-content: flex-start; // Stack naturally, avoid large whitespace
      text-align: inherit; // Follow Base alignment

      // Header section with title and introduction
      .header {
        align-items: inherit;
        text-align: inherit;
        margin: 0; // Remove extra spacing
        display: flex;
        flex-direction: column;
        gap: clamp(2.5rem, 3.5vw, 3.5rem); // Spacing between title and intro
        // Neutralize Base.VerticalContent automatic margins between children
        > * { margin-bottom: 0 !important; }
      }

      // Main heading styles
      .heading {
        text-align: inherit;
        margin: 0;
        font-size: clamp(1.45rem, 1.9vw, 2.35rem);
        line-height: 1.1;
        letter-spacing: -0.02em;
        font-weight: 500; // Strong headline weight
        white-space: pre-line; // Allow line breaks in text
        /* Color is controlled by Base theme (monochrome/colorful) */

        // Ensure line breaks are preserved in the inner span
        .heading-text {
          white-space: pre-line !important;
          word-break: break-word !important;
          word-wrap: break-word !important;
          overflow-wrap: break-word !important;
          display: block;

          // Responsive line breaking for longer titles
          @media (max-width: 768px) {
            max-width: 20ch;
          }

          @media (min-width: 769px) {
            max-width: 30ch;
          }
        }
      }
      // Override Base.SectionTitle default sizing while preserving theme colors
      :global(.sectionTitle).heading {
        font-size: clamp(1.45rem, 1.9vw, 2.35rem) !important;
        line-height: 1.1 !important;
        color: inherit !important;
        white-space: pre-line !important;
        word-break: break-word !important;
        word-wrap: break-word !important;
        overflow-wrap: break-word !important;
      }

      // Global override for all SectionTitle elements to preserve line breaks
      :global(.sectionTitle) {
        white-space: pre-line !important;
        word-break: break-word !important;
        word-wrap: break-word !important;
        overflow-wrap: break-word !important;
      }

      // Specific overrides for inline editing scenarios
      :global(.sectionTitle).heading .heading-text,
      :global(.sectionTitle) .heading-text,
      .heading .heading-text,
      .heading-text {
        white-space: pre-line !important;
        word-break: break-word !important;
        word-wrap: break-word !important;
        overflow-wrap: break-word !important;
        display: block !important;
      }

      // Override inline styles that might be applied during editing
      :global(.sectionTitle)[style*="white-space"],
      :global(.sectionTitle)[style*="word-break"] {
        white-space: pre-line !important;
        word-break: break-word !important;
      }

      // Introduction text styles
      .intro {
        text-align: inherit;
        margin: 0; // Spacing handled by header gap
        font-size: clamp(0.95rem, 1.15vw, 1.25rem); // Smaller than heading
        line-height: 1.55;
        color: var(--composer-tertiary-color); // Theme-driven color
        max-width: 72ch;
      }

      // Override Base.SectionDescription default sizing
      :global(.sectionDescription).intro { 
        font-size: clamp(0.95rem, 1.15vw, 1.25rem) !important; 
      }

      // Features container section
      .features-block {
        display: flex;
        flex-direction: column;
        gap: 0; // Spacing handled inside
        margin-top: auto; // Push features to bottom to align with image
        padding-top: clamp(5rem, 7vw, 6.5rem); // Space from intro
        margin-bottom: 0; // Avoid extra space below

        // Dynamic grid based on item count
        .features {
          display: grid;
          column-gap: clamp(2rem, 3.2vw, 4rem); // Horizontal spacing between features
          row-gap: clamp(1.25rem, 2.2vw, 1.9rem); // Vertical spacing between features
          max-width: 65rem; // Prevent over-expansion on ultra-wide screens
          align-items: start;
          grid-auto-flow: row; // Ensure items flow vertically first
          grid-auto-rows: auto; // Let rows size automatically

          .feature {
            // Neutralize Base.VerticalContent automatic margins between children
            > * { margin-bottom: 0 !important; }

            // Feature title with hover animation
            .feature-title {
              font-size: clamp(1.2rem, 1.5vw, 1.9rem); // Larger for visual balance
              font-weight: 700;
              text-align: left;
              color: var(--composer-font-color-primary); // Theme font primary color
              padding: 0;
              margin: 0 0 clamp(1.2rem, 1.5vw, 1.8rem) 0; // Space between title and text
              transform: none;
              cursor: pointer;
              transition: transform 0.3s ease;
              background: transparent !important; // Remove badge-like backgrounds
              box-shadow: none !important;
              
              // Scale up on hover
              &:hover {
                transform: scale(1.1);
              }
              
              // Remove default pseudo-elements
              &::before {
                display: none;
                content: none;
              }
              &::after {
                display: none;
                content: none;
              }
            }

            // Feature description text
            .feature-text {
              margin: 0.8rem 0 0 0; // Space between title and text
              padding: 0;
              color: var(--composer-tertiary-color); // Match intro color, theme-driven
              text-align: inherit;
              font-size: clamp(1.3rem, 1.5vw, 1.6rem); // Slightly reduced from previous
              line-height: 1.78; // Maintain readability
              max-width: 38ch; // Narrower width to wrap more and increase height
            }

            // Ensure no unexpected bottom margin affects final alignment
            &:last-child {
              .feature-text { margin-bottom: 0; }
            }
          }
        }
      }
    }
  }
}

/* Theme integration: Colorful theme styles */
.container:global(.colorful) {
  .max-content {
    .col-content {
      .heading { color: var(--composer-primary-color) !important; }
      :global(.sectionTitle).heading { color: var(--composer-primary-color) !important; }
      .features .feature-title { color: var(--composer-primary-color) !important; }
    }
  }
}

/* Theme integration: Monochrome theme styles */
.container:global(.monochrome) {
  .max-content {
    .col-content {
      .heading { color: var(--composer-font-color-primary) !important; }
      :global(.sectionTitle).heading { color: var(--composer-font-color-primary) !important; }
      .features .feature-title { color: var(--composer-font-color-primary) !important; }
    }
  }
}

// Tablet responsive styles (768px - 1200px)
@media (min-width: 48rem) and (max-width: 75rem) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: 3.2rem !important; }
        .intro { font-size: 2.1rem !important; line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 2.1rem !important; }

      .features {
        .feature-title { font-size: 1.05rem !important; }
        .feature-text { font-size: 0.92rem !important; line-height: 1.6; }
      }
    }
  }
}

// Fallback for environments where container queries are not active
@media (max-width: 64rem) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: 3.2rem !important; }
        .intro { font-size: 1.6rem !important; line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 1.6rem !important; }

      .features-block { margin-top: 0; padding-top: clamp(1rem, 2.5vw, 1.5rem); }
      .features { 
        display: grid;
        grid-template-columns: repeat(2, 1fr) !important; // Max 2 columns on tablet
        column-gap: clamp(1rem, 3vw, var(--composer-gap-xl));
        row-gap: clamp(0.75rem, 2.5vw, var(--composer-gap-md));
        grid-auto-flow: row;
        grid-auto-rows: auto;
        .feature-title { font-size: 1.25rem !important; }
        .feature-text { font-size: 1.4rem !important; max-width: 46ch; line-height: 1.6; }
      }

      // Respect editor alignment on viewport-fallback tablet
      :global(.container.left) { 
        .max-content { 
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
            text-align: left !important; 
            align-items: flex-start !important; 
          } 
        } 
      }
      :global(.container.center) { 
        .max-content { 
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
            text-align: center !important; 
            align-items: center !important; 
          } 
          .features { justify-items: center; } 
        } 
      }
    }
  }
}

// Mobile responsive styles
@media (max-width: 40rem) {
  .container {
    .max-content {
      .col-content {
        .heading { font-size: clamp(2.2rem, 7vw, 2.8rem); }
        .intro { font-size: clamp(1.6rem, 5.5vw, 1.9rem); line-height: 1.6; }
      }
      :global(.sectionTitle).heading { font-size: clamp(2.4rem, 8vw, 3rem) !important; }
      :global(.sectionDescription).intro { font-size: clamp(1.75rem, 6vw, 2.1rem) !important; }

      .features-block { margin-top: 0; padding-top: clamp(1rem, 4vw, 1.25rem); }
      .features {
        display: grid;
        grid-template-columns: 1fr !important; // Max 1 column on mobile
        width: 100%;
        gap: var(--composer-gap-sm);
        grid-auto-flow: row;
        grid-auto-rows: auto;
        .feature-title { font-size: clamp(0.95rem, 4vw, 1.1rem) !important; }
        .feature-text { font-size: clamp(0.8rem, 3vw, 0.95rem) !important; max-width: 100%; line-height: 1.6; }
      }
    }
  }
}

// Large container styles (e.g., Full width): increase typography sizes
@container (min-width: 87.5rem) {
  .container {
    .max-content {
      .col-content {
        .heading {
          font-size: clamp(2.3rem, 3.2vw, 5rem);
        }
        .intro {
          font-size: clamp(1.2rem, 1.6vw, 2rem);
        }
        .features {
          .feature-title {
            font-size: clamp(1.2rem, 1.5vw, 2rem);
          }
          .feature-text {
            font-size: clamp(1rem, 1.2vw, 1.3rem);
          }
        }
      }
    }
  }
}

// Tablet container query styles
@container (max-width: #{$composer-tablet-width}) {
  .container {
    .max-content {
      min-height: unset;
      --c28-scale: 1; // Normalize scale for tablet

      .grid {
        gap: var(--composer-gap-lg);
        flex-direction: row; // Keep desktop-like two-column layout on tablet
        align-items: stretch;
      }

      .col-image {
        height: auto;
        border: 0.0625rem solid rgba(0,0,0,0.06); // Match desktop border
        align-self: stretch;
        flex: 0 0 min(24rem, 40%);
      }
      .image { height: 100%; width: 100%; aspect-ratio: auto; object-fit: cover; }

      .col-content { min-height: auto; width: auto; flex: 1 1 0%; }

      // Typography for tablet: match reference ratio
      .heading { font-size: 3.2rem !important; }
      .intro { font-size: 1.6rem !important; line-height: 1.6; }
      // Ensure override against Base component !important rules
      :global(.sectionTitle).heading { font-size: 3.2rem !important; }
      :global(.sectionDescription).intro { font-size: 1.6rem !important; }

      // On stacked layout do not push features to column bottom
      .features-block { margin-top: 0; padding-top: clamp(1rem, 2.5vw, 1.5rem); }

      // Two columns for features under centered image
      .features { 
        display: grid;
        grid-template-columns: repeat(2, 1fr) !important; // Max 2 columns on tablet
        column-gap: clamp(1rem, 3vw, var(--composer-gap-xl));
        row-gap: clamp(0.75rem, 2.5vw, var(--composer-gap-md));
        grid-auto-flow: row;
        grid-auto-rows: auto;
        // Smaller feature texts for clearer hierarchy
        .feature-title { font-size: 1.25rem !important; }
        .feature-text { font-size: 1.4rem !important; max-width: 46ch; line-height: 1.6; }
        // Ensure Base typographic classes do not override (correct combined selectors)
        .feature-title:global(.sectionSubTitle) { font-size: 1.25rem !important; }
        .feature-text:global(.p) { font-size: 1.4rem !important; line-height: 1.6 !important; }
      }

      // Alignment from editor (using global .left/.center on an ancestor)
      :global(.left) & {
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
          text-align: left !important; 
          align-items: flex-start !important; 
        }
      }
      :global(.center) & {
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
          text-align: center !important; 
          align-items: center !important; 
        }
        .features { justify-items: center; }
      }

      // Respect editor alignment on tablet
      :global(.container.left) {
        .max-content {
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
            text-align: left !important; 
            align-items: flex-start !important; 
          }
        }
      }
      :global(.container.center) {
        .max-content {
          .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
            text-align: center !important; 
            align-items: center !important; 
          }
          .features { justify-items: center; }
        }
      }
    }
  }
}

// Mobile container query styles
@container (max-width: #{$composer-phone-width}) {
  .container {
    .max-content {
      min-height: unset;
      --c28-scale: 1; // Normal scale for mobile

      // Stack layout: image on top, content below
      .grid {
        flex-direction: column; // Stack vertically on mobile
        gap: var(--composer-gap-md);
      }

      .center-line { display: none; } // Hide divider on mobile

      // Apply content3-like image box behavior
      .col-image {
        order: -1; // Image first
        height: auto;
        width: 100%;
        padding: 0;
        margin: 0;
        border: none;
        border-radius: var(--composer-border-radius-md);
        overflow: hidden; // Ensure image fills without gaps
      }
      .image { width: 100%; height: auto; aspect-ratio: 1; object-fit: cover; display: block; }

      .col-content { min-height: auto; }

      // Compact typography on mobile: bigger heading/intro, smaller features
      .heading { font-size: clamp(2.8rem, 9vw, 3.4rem); }
      .header { gap: clamp(0.6rem, 2.5vw, 1rem); }
      .intro { font-size: clamp(1.75rem, 6vw, 2.1rem); line-height: 1.6; }
      // Ensure override against Base component !important rules
      :global(.sectionTitle).heading { font-size: clamp(2.8rem, 9vw, 3.4rem) !important; }
      :global(.sectionDescription).intro { font-size: clamp(1.9rem, 6.8vw, 2.3rem) !important; }

      // Do not pin features to bottom on mobile; keep natural flow
      .features-block { margin-top: 0; padding-top: clamp(1rem, 4vw, 1.25rem); }

      // Single column for features with reduced gap (force single column)
      .features {
        display: grid;
        grid-template-columns: 1fr !important; // Max 1 column on mobile
        width: 100%;
        gap: var(--composer-gap-sm);
        grid-auto-flow: row;
        grid-auto-rows: auto;
        .feature-title { font-size: clamp(1.05rem, 4.8vw, 1.25rem) !important; }
        .feature-text { font-size: clamp(1rem, 4.2vw, 1.2rem) !important; max-width: 100%; line-height: 1.65; }
      }
      .feature {
        align-items: flex-start;
        text-align: left;
        max-width: 65ch; // Readable line length
      }

      // Alignment from editor on mobile
      :global(.left) & { 
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
          text-align: left !important; 
          align-items: flex-start !important; 
        } 
      }
      :global(.center) & { 
        .col-content, .header, .heading, .intro, .features, .feature, .feature-title, .feature-text { 
          text-align: center !important; 
          align-items: center !important; 
        } 
        .features { justify-items: center; } 
      }
    }
  }
}
