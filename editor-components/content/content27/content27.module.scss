@use "../../../composer-base-components/base/utitilities/viewports.module.scss" as *;

.container {
  width: 100%;
  background-color: var(--composer-html-background, #fff);
  color: var(--composer-font-color-primary, #000000);
  container-type: inline-size;
}

.container :where(h1, h2, h3, h4, h5, h6, p) {
  margin: 0;
}

.container :where(ul, ol) {
  margin: 0;
  padding: 0;
}

.max-content {
  margin: 0 auto;
  width: 100%;
  max-width: var(--composer-content-width);
}

.grid {
  display: flex !important;
  flex-direction: row;
  align-items: stretch;
  justify-content: flex-start;
  flex-wrap: nowrap;
  width: 100%;
  margin-top: 0;
  gap: 0 !important;
}

.dividerColumn {
  display: flex;
  align-items: stretch;
  justify-content: center;
  width: auto;
  flex-shrink: 0;
  flex-grow: 0;
  padding: 0 calc(var(--composer-gap-xl) * 2) 0 var(--composer-gap-xl);
  min-width: 0;
}

.dividerWrapper {
  display: flex;
  align-items: stretch;
  justify-content: center;
  width: 100%;
}

.dividerLine {
  display: block;
  width: 0.125rem;
  height: 100%;
  background-color: var(--composer-font-color-primary, #000000);
  opacity: 0.12;
  transition: opacity 0.3s ease;
}

.grid.noDivider {
  .dividerLine {
    opacity: 0;
  }
}

/* Ensure divider is always visible when showDivider is true */
.grid:not(.noDivider) {
  .dividerLine {
    opacity: 0.12;
  }
}

.leftContent,
.left-column {
  display: flex;
  flex-direction: column;
  gap: var(--composer-gap-xl);
  align-items: flex-start;
  text-align: left;
  flex: 0 0 auto;
  width: 35%;
  max-width: 450px;
  min-width: 280px;
  min-height: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  justify-content: flex-start;
}

/* Header section for subtitle and title spacing */
.leftContent .header {
  display: flex;
  flex-direction: column;
  gap: var(--composer-gap-md);
  margin-bottom: var(--composer-gap-lg);
}


.leftContent .leftTitle {
  margin: 0;
  padding: 0;
}

.main-title {
  content: "";
}

/* Editor Design Panel Alignment Controls */
.container {

  /* Text alignment controls - Content9 style */
  &[style*="text-align: left"] {
    .leftContent {
      align-items: flex-start;
      text-align: left;
    }

    .leftTitle {
      text-align: left;
    }

    .listWrapper {
      justify-content: flex-start;
    }

    .list {
      align-items: flex-start;
    }

    .listItem {
      justify-content: flex-start;
      text-align: left;
    }

    .ctaWrapper {
      justify-content: flex-start;
    }

    .ctaButton {
      text-align: left;
    }

    .rightColumn {
      align-items: flex-start;
      text-align: left;
    }

    .infoLine {
      text-align: left;
    }
  }

  &[style*="text-align: center"] {
    .leftContent {
      align-items: center;
      text-align: center;
    }

    .leftTitle {
      text-align: center;
    }

    .listWrapper {
      justify-content: center;
    }

    .list {
      align-items: center;
    }

    .listItem {
      justify-content: center;
      text-align: center;
    }

    .ctaWrapper {
      justify-content: center;
    }

    .ctaButton {
      text-align: center;
    }

    .rightColumn {
      align-items: center;
      text-align: center;
    }

    .infoLine {
      text-align: center;
    }
  }

  &[style*="text-align: right"] {
    .leftContent {
      align-items: flex-end;
      text-align: right;
    }

    .leftTitle {
      text-align: right;
    }

    .listWrapper {
      justify-content: flex-end;
    }

    .list {
      align-items: flex-end;
    }

    .listItem {
      justify-content: flex-end;
      text-align: right;
    }

    .ctaWrapper {
      justify-content: flex-end;
    }

    .ctaButton {
      text-align: right;
    }

    .rightColumn {
      align-items: flex-end;
      text-align: right;
    }

    .infoLine {
      text-align: right;
    }
  }

  &[style*="text-align: justify"] {
    .leftContent {
      align-items: flex-start;
      text-align: justify;
    }

    .leftTitle {
      text-align: justify;
    }

    .listWrapper {
      justify-content: flex-start;
    }

    .list {
      align-items: flex-start;
    }

    .listItem {
      justify-content: flex-start;
      text-align: justify;
    }

    .ctaWrapper {
      justify-content: flex-start;
    }

    .ctaButton {
      text-align: justify;
    }

    .rightColumn {
      align-items: flex-start;
      text-align: justify;
    }

    .infoLine {
      text-align: justify;
    }
  }

  /* Justify-content controls */
  &[style*="justify-content: flex-start"] {
    .leftContent {
      align-items: flex-start;
      text-align: left;
      justify-content: flex-start;
      margin-left: auto;
      margin-right: 0;
    }

    .listWrapper {
      justify-content: flex-start;
    }

    .list {
      align-items: flex-start;
    }

    .ctaWrapper {
      justify-content: flex-start;
    }
  }

  /* Vertical positioning of text block inside left column (top/center/bottom) */
  &[style*="align-content: flex-start"] {
    .leftContent {
      justify-content: flex-start;
    }
  }

  &[style*="align-content: center"] {
    .leftContent {
      justify-content: center;
    }
  }

  &[style*="align-content: flex-end"] {
    .leftContent {
      justify-content: flex-end;
    }
  }

  &[style*="justify-content: center"] {
    .leftContent {
      align-items: center;
      text-align: center;
      justify-content: center;
      margin-left: 0;
      margin-right: 0;
    }

    .listWrapper {
      justify-content: center;
    }

    .list {
      align-items: center;
    }

    .ctaWrapper {
      justify-content: center;
    }
  }

  &[style*="justify-content: flex-end"] {
    .leftContent {
      align-items: flex-end;
      text-align: right;
      justify-content: flex-end;
      margin-left: 0;
      margin-right: auto;
    }

    .listWrapper {
      justify-content: flex-end;
    }

    .list {
      align-items: flex-end;
    }

    .ctaWrapper {
      justify-content: flex-end;
    }
  }

  /* Align-items controls */
  &[style*="align-items: flex-start"] {
    .leftContent {
      align-items: flex-start;
      text-align: left;
    }

    .list {
      align-items: flex-start;
    }

    .rightColumn {
      align-items: flex-start;
      text-align: left;
    }

    .detailsSection {
      align-items: flex-start;
      text-align: left;
    }
  }

  &[style*="align-items: center"] {
    .leftContent {
      align-items: center;
      text-align: center;
    }

    .list {
      align-items: center;
    }

    .rightColumn {
      align-items: center;
      text-align: center;
    }

    .detailsSection {
      align-items: center;
      text-align: center;
    }
  }

  &[style*="align-items: flex-end"] {
    .leftContent {
      align-items: flex-end;
      text-align: right;
    }

    .list {
      align-items: flex-end;
    }

    .rightColumn {
      align-items: flex-end;
      text-align: right;
    }

    .detailsSection {
      align-items: flex-end;
      text-align: right;
    }
  }
}

/* Enable alignment when applied directly on the inner left container (editor selection) */
.leftContent.text-align-left,
.leftContent[style*="text-align: left"] {
  align-items: flex-start;
  text-align: left;

  .listWrapper {
    justify-content: flex-start;
  }

  .list {
    align-items: flex-start;
  }

  .ctaWrapper {
    justify-content: flex-start;
  }
}

.leftContent.text-align-center,
.leftContent[style*="text-align: center"] {
  align-items: center;
  text-align: center;

  .listWrapper {
    justify-content: center;
  }

  .list {
    align-items: center;
  }

  .ctaWrapper {
    justify-content: center;
  }
}

.leftContent.text-align-right,
.leftContent[style*="text-align: right"] {
  align-items: flex-end;
  text-align: right;

  .listWrapper {
    justify-content: flex-end;
  }

  .list {
    align-items: flex-end;
  }

  .ctaWrapper {
    justify-content: flex-end;
  }
}

.leftContent.text-align-justify,
.leftContent[style*="text-align: justify"] {
  align-items: flex-start;
  text-align: justify;

  .listWrapper {
    justify-content: flex-start;
  }

  .list {
    align-items: flex-start;
  }

  .ctaWrapper {
    justify-content: flex-start;
  }
}

/* Allow direct vertical positioning when styles are applied on leftContent */
.leftContent[style*="align-content: flex-start"] {
  justify-content: flex-start;
}

.leftContent[style*="align-content: center"] {
  justify-content: center;
}

.leftContent[style*="align-content: flex-end"] {
  justify-content: flex-end;
}

/* Respect global alignment setting (Base.Container adds .center/.left) */
.container:global(.center) {
  .leftContent {
    align-items: center;
    text-align: center;
    margin-left: 0;
    margin-right: 0;
  }

  .listWrapper {
    justify-content: center;
  }

  .list {
    align-items: center;
  }

  .ctaWrapper {
    justify-content: center;
  }
}

/* Global design alignment hooks (all breakpoints) */
.container.text-align-center,
.container[style*="text-align: center"],
.container[style*="justify-content: center"] {
  .leftContent {
    justify-content: center;
  }

  .leftContent {
    align-items: center;
    text-align: center;
  }

  .listWrapper {
    justify-content: center;
  }

  .list {
    align-items: center;
  }

  .listItem {
    justify-content: center;
    text-align: center;
  }
}

.container.text-align-right,
.container[style*="text-align: right"],
.container[style*="justify-content: flex-end"] {
  .leftContent {
    justify-content: flex-end;
  }

  .leftContent {
    align-items: flex-end;
    text-align: right;
  }

  .listWrapper {
    justify-content: flex-end;
  }

  .list {
    align-items: flex-end;
  }

  .listItem {
    justify-content: flex-end;
    text-align: right;
  }
}

.container.text-align-left,
.container[style*="text-align: left"],
.container[style*="justify-content: flex-start"] {
  .leftContent {
    justify-content: flex-start;
  }

  .leftContent {
    align-items: flex-start;
    text-align: left;
  }

  .listWrapper {
    justify-content: flex-start;
  }

  .list {
    align-items: flex-start;
  }

  .listItem {
    justify-content: flex-start;
    text-align: left;
  }
}



.leftTitle {
  margin: 0;
  padding: 0;
  width: 100%;
  max-width: none;
  word-wrap: break-word;
  overflow-wrap: break-word;
  font-weight: 800;

  /* Desktop için daha büyük font */
  @container (min-width: #{$composer-tablet-width + 1px}) {
    font-size: calc(2.5 * var(--composer-font-size-md));
  }

  /* Tablet için orta boy font */
  @container (max-width: #{$composer-tablet-width}) {
    font-size: calc(2.25 * var(--composer-font-size-md));
  }

  /* Mobil için küçük font */
  @container (max-width: #{$composer-phone-width}) {
    font-size: calc(1.75 * var(--composer-font-size-md));
  }
}

.list {
  display: flex;
  flex-direction: column;
  gap: var(--composer-gap-md);
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
  min-height: 6.25rem;
  align-items: flex-start;
}

.listItem {
  position: relative;
  display: flex;
  align-items: center;
  min-height: 2.5rem;
  padding: var(--composer-gap-xs) 0 var(--composer-gap-xs) var(--composer-gap-sm);
  background: transparent;
  border: none;
  outline: none;
  -webkit-appearance: none;
  appearance: none;
  border-radius: 0;
  box-shadow: none;
  -webkit-tap-highlight-color: transparent;
  color: var(--composer-font-color-primary, #000000);
  font: inherit;
  text-align: left;
  cursor: pointer;
  transition: all 0.3s ease;
  justify-content: flex-start;
}

.listItem::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 0.25rem;
  height: 0;
  border-radius: 2px;
  background-color: transparent;
  opacity: 0;
  transition: height 0.3s ease, opacity 0.3s ease, background-color 0.3s ease;
}

.listItem.isActive {
  color: var(--composer-primary-color, #f97316);
  font-weight: var(--composer-font-weight-bold);
  transform: translateX(0.5rem);
}

.listItemText {
  margin: 0;
  color: inherit;
  font-weight: inherit;
  line-height: 1.3;
}

.listItem.isActive::before {
  background-color: currentColor;
  height: 100%;
  opacity: 1;
}

/* Liste stilleri */
.list {
  gap: var(--composer-gap-sm);
}

.listItem {
  padding: var(--composer-gap-xs) 0 var(--composer-gap-xs) var(--composer-gap-sm);
  min-height: 2rem;

  &::before {
    width: 0.3rem;
    height: 0;
    border-radius: 2px;
  }

  &.isActive {
    transform: translateX(0.5rem);

    &::before {
      height: 100%;
      opacity: 1;
      background-color: currentColor;
    }
  }
}

.rightColumn {
  justify-content: flex-start !important;
  flex: 1 1 auto;
  width: auto;
  min-width: 400px;
  margin: 0;
  padding: 0;
  gap: var(--composer-gap-lg) !important;
  opacity: 0;
  transform: translateY(1.5rem);
  transition: opacity 0.4s ease, transform 0.4s ease;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100%;

  &.isActive {
    opacity: 1;
    transform: translateY(0);
  }
}

.imageBox {
  background: var(--composer-html-background, var(--background));
  border: 1px solid rgba(229, 231, 235, 0.75);
  border-radius: var(--composer-border-radius-lg);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
  padding: calc(var(--composer-gap-lg) * 0.8);
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  margin-left: auto;
  position: relative;
  overflow: hidden;
}

.image {
  width: 100%;
  height: auto;
  border-radius: var(--composer-border-radius-lg);
  object-fit: cover;
  position: relative;
  display: block;
}

.infoLine {
  line-height: 1.6;
  color: var(--composer-font-color-primary, #000000);
  font-weight: 400;
  margin: 0 0 var(--composer-gap-md) 0;
  width: 100%;
  text-align: left;
  align-self: flex-start;
}

.infoLine strong {
  font-weight: 700;
  color: var(--composer-font-color-primary, #000000);
  margin-right: var(--composer-gap-xs);
}

.infoLine span {
  color: var(--composer-font-color-primary, #000000);
  font-weight: 400;
}

.buttonSection {
  display: none;
}


/* ctaSection removed - button moved to rightContent */

/* ctaLeftPlaceholder, ctaDividerPlaceholder, ctaColumn removed - button moved to rightContent */

.fadeIn {
  animation: fadeInAnimation 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.show {
  opacity: 1;
}

.activeBar {
  position: absolute;
  left: -1rem;
  top: 50%;
  transform: translateY(-50%);
  width: 0.375rem;
  height: 0.375rem;
  background-color: currentColor;
  border-radius: 50%;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  transform: translateY(-50%) scale(0);
}

.listItem.isActive .activeBar {
  opacity: 1;
  transform: translateY(-50%) scale(1);
}

@keyframes fadeInAnimation {
  0% {
    opacity: 0;
    transform: translateY(1.875rem) scale(0.95);
  }

  50% {
    opacity: 0.7;
    transform: translateY(0.625rem) scale(0.98);
  }

  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.ctaWrapper {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  margin: 0;
  align-self: flex-start;
}

.ctaButton {
  border-radius: var(--composer-border-radius-sm);
}

/* Tablet Responsive Design */
@container (max-width: #{$composer-tablet-width}) {
  .max-content {
    padding: 0;
  }

  /* Flexbox yapısı - tablet'te biraz daha dar */
  .grid {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: 0;
  }

  /* Header spacing for tablet */
  .leftContent .header {
    gap: var(--composer-gap-sm);
    margin-bottom: var(--composer-gap-xs);
  }

  /* Divider spacing */
  .dividerColumn {
    padding: 0 var(--composer-gap-md) 0 var(--composer-gap-sm);
  }

  .dividerLine {
    opacity: 0.12;
    transition: opacity 0.3s ease;
  }

  .grid.noDivider {
    .dividerLine {
      opacity: 0;
    }
  }

  /* Sol içerik alanı */
  .leftContent {
    flex: 0 0 auto;
    width: 30%;
    min-width: 180px;
    max-width: 280px;
    gap: var(--composer-gap-lg);
    padding: 0;
    overflow: hidden;
  }

  .leftTitle {
    line-height: 1.15;
    font-size: calc(1.5 * var(--composer-font-size-md));
    margin: 0;
    padding: 0;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }


  /* Liste stilleri */
  .list {
    gap: var(--composer-gap-sm);
  }

  .listItem {
    padding: var(--composer-gap-xs) 0 var(--composer-gap-xs) var(--composer-gap-sm);
    min-height: 2rem;
    transition: all 0.3s ease;

    &::before {
      width: 0.3rem;
      height: 0;
      border-radius: 2px;
    }

    &.isActive {
      transform: translateX(0.5rem);
      color: var(--composer-primary-color, #f97316);
      font-weight: var(--composer-font-weight-bold);

      &::before {
        height: 100%;
        opacity: 1;
        background-color: currentColor;
      }
    }
  }

  .listItemText {
    font-size: calc(1.1 * var(--composer-font-size-md));
    line-height: 1.3;
  }

  /* Sağ içerik alanı */
  .rightColumn {
    flex: 1 1 auto;
    width: auto;
    min-width: 300px;
    gap: var(--composer-gap-md);
    padding: 0;
    align-items: flex-start;
    opacity: 0;
    transform: translateY(1.5rem);
    transition: opacity 0.4s ease, transform 0.4s ease;

    &.isActive {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .imageBox {
    padding: var(--composer-gap-sm);
    width: 100%;
    max-width: 100%;
    margin-left: auto;
  }

  .image {
    width: 100%;
    height: auto;
  }

  .infoLine {
    margin: 0 0 var(--composer-gap-sm) 0;
    font-size: calc(0.95 * var(--composer-font-size-md));
    line-height: 1.5;
  }

  .ctaWrapper {
    margin-top: var(--composer-gap-md);
  }

  /* Alignment kontrolleri */
  .container.text-align-center,
  .container[style*="text-align: center"],
  .container:global(.center) {
    .leftContent {
      align-items: center;
      text-align: center;
    }

    .list {
      align-items: center;
    }

    .listItem {
      justify-content: center;
      text-align: center;
    }
  }

  .container.text-align-right,
  .container[style*="text-align: right"],
  .container:global(.right) {
    .leftContent {
      align-items: flex-end;
      text-align: right;
    }

    .list {
      align-items: flex-end;
    }

    .listItem {
      justify-content: flex-end;
      text-align: right;
    }
  }

  .container.text-align-left,
  .container[style*="text-align: left"],
  .container:global(.left) {
    .leftContent {
      align-items: flex-start;
      text-align: left;
    }

    .list {
      align-items: flex-start;
    }

    .listItem {
      justify-content: flex-start;
      text-align: left;
    }
  }
}


/* Mobile Responsive Design */
@container (max-width: #{$composer-phone-width}) {
  .max-content {
    flex-direction: column;
  }

  .grid {
    flex-direction: column;
    width: 100%;
  }

  .dividerColumn {
    display: none;
  }

  .leftContent {
    width: 100%;
    max-width: 100%;
    min-width: 100%;
  }

  .leftTitle {
    width: 100%;
    font-size: calc(1.75 * var(--composer-font-size-md));
  }

  .list {
    width: 100%;
  }

  /* Liste öğeleri */
  .listItem {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    text-align: left;
    width: 100% !important;
    max-width: 100%;
    padding: var(--composer-gap-xs) var(--composer-gap-sm) var(--composer-gap-xs) 0;
    min-height: 2.5rem;
    margin: 0;
    transition: all 0.3s ease;
    position: relative;
    cursor: pointer;

    &::before {
      content: "";
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      width: 0.3rem;
      height: 100%;
      max-height: calc(100% - (var(--composer-gap-xs) * 2));
      border-radius: 2px;
      opacity: 0;
      transition: all 0.3s ease;
      background-color: transparent;
    }

    &.isActive {
      color: var(--composer-primary-color, #f97316);
      font-weight: var(--composer-font-weight-bold);
      transform: none;

      &::before {
        opacity: 1;
        background-color: currentColor;
      }
    }
  }

  .listItemText {
    margin: 0;
    padding: 0 0 0 calc(0.3rem + var(--composer-gap-sm));
    line-height: 1.4;
    font-size: var(--composer-font-size-md);
    text-align: left;
    width: 100% !important;
    display: block;
  }

  /* Sağ içerik */
  .rightColumn {
    display: flex;
    flex-direction: column;
    gap: var(--composer-gap-md);
    width: 100%;
    align-items: flex-start;
    text-align: left;
    opacity: 0;
    transform: translateY(1rem);
    transition: opacity 0.4s ease, transform 0.4s ease;

    &.isActive {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Image box */
  .imageBox {
    width: 100%;
    padding: var(--composer-gap-sm);
    background: var(--composer-html-background, #fff);
    border: 1px solid rgba(229, 231, 235, 0.75);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
    border-radius: var(--composer-border-radius-md);
  }

  /* Image */
  .image {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: var(--composer-border-radius-sm);
  }

  /* Info lines */
  .infoLine {
    display: flex;
    flex-direction: column;
    gap: var(--composer-gap-xs);
    margin-bottom: var(--composer-gap-sm);
    align-items: flex-start;
    text-align: left;

    strong {
      font-weight: 700;
      text-align: left;
    }
  }

  /* CTA */
  .ctaWrapper {
    display: flex;
    width: 100%;
    justify-content: flex-start;
    align-items: flex-start;
    text-align: left;
  }

  .listItem {
    width: 100%;
  }

  .listItemText {
    width: 100%;
  }

  .rightColumn {
    width: 100%;
    min-width: 100%;
  }
}

/* Empty State Styles - Shown when no items are present */
.emptyState {
  list-style: none;
  padding: 1.25rem;
  text-align: center;
  color: var(--composer-font-color-primary, #000000);

  p {
    margin: 0;
    font-style: italic;
  }
}

.emptyContentState {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  min-height: 12.5rem;

  p {
    margin: 0;
    font-style: italic;
    color: var(--composer-font-color-primary, #000000);
  }
}