@use "../../../composer-base-components/base/utitilities/viewports.module.scss" as *;

/* ==================== Slider 12 ==================== */
:root {
  --arrow-icon-size: 50px;
  --arrow-glyph-size: 23px;
  --arrow-pad: 12px;
  --slide-speed: 800ms;
  /* Reduced from 620ms for smoother transitions */
  --right-margin: clamp(20px, 5vw, 60px);
  /* Right side margin for desktop */
}

/* --------------------- Layout --------------------- */
.container {
  container-type: inline-size;

  .max-content .header .header-content {
    max-width: clamp(720px, 70vw, 1100px);
    margin-inline: auto;
  }

  .max-content .header .header-content .title {
    width: 100%;
    font-size: clamp(28px, 8vw, 56px);
    line-height: 1.12;
    letter-spacing: -0.02em;
    margin-bottom: var(--composer-gap-md);
    overflow-wrap: break-word;
    text-wrap: balance;
    font-weight: bold;
    text-align: left !important;
  }

  .max-content .header .header-content .description {
    width: 100%;
    font-size: clamp(16px, 2.1vw, 20px);
    color: var(--composer-tertiary-color);
    margin-top: 0.25rem;
    font-weight: bold;
    line-height: 1.55;
  }

  .max-content {
    display: flex;
    flex-direction: column;

    .header {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: clamp(12px, 2vw, 24px);
      position: relative;
      /* absolute arrows için referans */
      width: 100%;
      z-index: 1;

      .header-content {
        width: 100%;
        max-width: var(--composer-content-width);
      }

      /* Base arrow styles - position will be set by container queries */
      .arrows {
        display: flex;
        gap: 15px;
        z-index: 10;
      }

      %arrowBase {
        padding: var(--arrow-pad);
        border-radius: 9999px;
        border: 2px solid var(--composer-font-color-primary);
        background: transparent;
        display: inline-grid;
        place-items: center;
        cursor: pointer;
        color: var(--composer-font-color-primary);
        /* ikon rengi */
        width: var(--arrow-icon-size);
        height: var(--arrow-icon-size);
        transition: border-color .15s ease, transform .12s ease;
        line-height: 0;
        /* svg’yi tam ortalar */
      }

      .prevArrow,
      .nextArrow {
        @extend %arrowBase;
        border: 2px solid var(--composer-font-color-primary);
        color: var(--composer-font-color-primary) !important;
        /* Force icon color */

        /* Only border changes on hover/active */
        &:hover,
        &:focus,
        &:active {
          border-color: var(--composer-primary-color) !important;
          color: var(--composer-font-color-primary) !important;
          /* Keep icon color consistent */
        }

        /* Disabled state */
        &[aria-disabled="true"] {
          border-color: var(--color-gray-100) !important;
          color: var(--color-gray-100) !important;
          opacity: 0.55;

          &:hover,
          &:focus,
          &:active {
            border-color: var(--color-gray-100) !important;
            color: var(--color-gray-100) !important;
          }
        }

        /* Force icon color consistency */
        svg {
          width: var(--arrow-glyph-size);
          height: var(--arrow-glyph-size);
          display: block;

          * {
            stroke: currentColor !important;
            fill: none !important;
          }
        }
      }

      /* İKON GÖRÜNÜRLÜK FIX */
      .prevArrow svg,
      .nextArrow svg {
        width: var(--arrow-glyph-size);
        height: var(--arrow-glyph-size);
        display: block;
      }

      .prevArrow svg *,
      .nextArrow svg * {
        stroke: currentColor !important;
        fill: none !important;
        /* Feather/Fi ikonları stroke tabanlı */
      }

      .prevArrow:not([aria-disabled="true"]):hover,
      .nextArrow:not([aria-disabled="true"]):hover {
        border-color: var(--composer-primary-color) !important;
        transform: scale(1.08);
      }

      .prevArrow:not([aria-disabled="true"]):active,
      .nextArrow:not([aria-disabled="true"]):active {
        border-color: var(--composer-primary-color) !important;
        transform: scale(0.95);
      }

      .prevArrow[aria-disabled="true"],
      .nextArrow[aria-disabled="true"] {
        border-color: var(--color-gray-100) !important;
        color: var(--color-gray-100) !important;
        opacity: 0.55;
        filter: grayscale(1);
        cursor: not-allowed !important;
        transform: none !important;
      }

      .prevArrow,
      .nextArrow {

        /* Ensure consistent colors for hover and active states */
        &:hover,
        &:focus,
        &:active {
          color: var(--composer-font-color-primary) !important;
          border-color: var(--composer-primary-color) !important;
        }

        /* Only disable the hover effect when aria-disabled=true */
        &[aria-disabled="true"] {
          border-color: var(--color-gray-100) !important;
          color: var (--color-gray-100) !important;

          &:hover,
          &:focus,
          &:active {
            border-color: var(--color-gray-100) !important;
            color: var(--color-gray-100) !important;
          }
        }
      }
    }
  }

  .slider-parent .carousel {
    padding-top: var(--composer-gap-sm);
  }
}

/* --------------------- Arrow Color Fix --------------------- */
.container .max-content .header {

  /* Ok stillerinin düzenlenmesi */
  .prevArrow,
  .nextArrow {
    /* Temel ok stili */
    padding: var(--arrow-pad);
    border-radius: 9999px;
    border: 2px solid var(--composer-font-color-primary);
    background: transparent;
    display: inline-grid;
    place-items: center;
    cursor: pointer;
    width: var(--arrow-icon-size);
    height: var(--arrow-icon-size);
    line-height: 0;
    color: var(--composer-font-color-primary) !important;
    /* İkon rengi */
    outline: none !important;

    /* Browser focus outline fix */
    &::-moz-focus-inner {
      border: 0;
    }

    /* Transform için smooth geçiş */
    transition: transform 0.12s ease,
    border-color 0.12s ease;

    /* İkon stilleri */
    svg {
      width: var(--arrow-glyph-size);
      height: var(--arrow-glyph-size);
      display: block;

      * {
        stroke: currentColor !important;
        fill: none !important;
      }
    }

    /* Aktif durumundaki okların stili (disabled değilken) */
    &:not([aria-disabled="true"]) {

      /* Hover durumu - border rengi değişir */
      &:hover {
        border-color: var(--composer-primary-color) !important;
        transform: scale(1.08);
      }

      /* Focus durumu */
      &:focus {
        border-color: var(--composer-primary-color) !important;
      }

      /* Tıklama anında (active durumu) */
      &:active {
        border-color: var(--composer-primary-color) !important;
        transform: scale(0.95);
      }

      /* .active sınıfını kaldırdık */
    }

    /* Disabled durumu */
    &[aria-disabled="true"] {
      border-color: var(--color-gray-100) !important;
      color: var(--color-gray-100) !important;
      opacity: 0.55;
      filter: grayscale(1);
      cursor: not-allowed;
      transform: none !important;

      &:hover,
      &:focus,
      &:active {
        border-color: var(--color-gray-100) !important;
        color: var(--color-gray-100) !important;
      }
    }
  }
}

/* -------- Arrow Positioning (Container-based) -------- */

/* Small containers: arrows below description, left-aligned */
@container (max-width: 960px) {
  .container .max-content .header .arrows {
    position: static;
    right: auto;
    top: auto;
    justify-content: flex-start;
    align-items: center;
    margin-top: var(--composer-gap-sm);
    margin-left: 0;
    padding-left: 0;
    z-index: 1;
    width: auto;
    gap: 10px;
  }

  .slider-parent {
    padding-top: var(--composer-gap-sm);
  }
}

/* Medium containers: arrows top-right, medium-sized */
@container (min-width: 961px) and (max-width: 1280px) {
  .container .max-content .header .arrows {
    position: absolute;
    top: calc(100% + var(--composer-gap-sm));
    right: 0;
    gap: 12px;
  }

  .slider-parent {
    padding-top: calc(var(--composer-gap-sm) + (var(--arrow-icon-size) * 0.3));
  }
}

/* Large containers: arrows top-right, standard size */
@container (min-width: 1281px) {
  .container .max-content .header .arrows {
    position: absolute;
    top: calc(100% + var(--composer-gap-sm));
    right: 0;
    gap: 15px;
  }

  .slider-parent {
    padding-top: calc(var(--composer-gap-sm) + (var(--arrow-icon-size) * 0.3));
  }
}

/* Anti-flicker styles - prevent layout shifts */
.container .slider-parent {
  will-change: transform;
  contain: layout style paint;
  transform: translate3d(0, 0, 0);

  /* Add right margin for desktop view */
  @container (min-width: 1024px) {
    .carousel:after {
      content: '';
      display: block;
      width: var(--right-margin);
      flex: 0 0 var(--right-margin);
      position: absolute;
      right: calc(-1 * var(--right-margin));
      top: 0;
      height: 1px;
    }

    /* Add padding to ensure last card is fully visible with right margin */
    .carousel :global(.slick-list) {
      padding-right: var(--right-margin) !important;
      margin-right: calc(-1 * var(--right-margin));
    }
  }

  /* Enhanced GPU acceleration for all slider elements */
  .carousel {
    perspective: 1000px;

    :global(.slick-track) {
      display: flex !important;
      will-change: transform;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      transition: transform var(--slide-speed) cubic-bezier(.16, 1, .3, 1) !important;
    }

    .slick-list {
      overflow: visible;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      contain: paint layout;
      will-change: transform;
      transform: translate3d(0, 0, 0);
      clip-path: inset(0);
      /* Use clip-path instead of overflow for smoother transitions */
      overflow: hidden !important;
      /* Double protection against overflows */
    }

    :global(.slick-slide) {
      float: none !important;
      display: block !important;
      min-width: 0;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      will-change: transform;
      width: 100% !important;
      max-width: 100% !important;
      transition-property: transform;
      position: relative;
      box-sizing: border-box;

      >div,
      .card {
        width: 100% !important;
        max-width: 100%;
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
      }

      .media-container {
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        will-change: transform;
      }

      /* Better media containment */
      img,
      video {
        object-fit: cover !important;
        width: 100% !important;
        height: 100% !important;
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        will-change: transform;
        contain: strict;
      }
    }
  }

  /* Ensure slide cards maintain consistent width */
  .carousel :global(.slick-slide) {
    width: 100% !important;
    max-width: 100%;
    will-change: transform;

    /* Prevent internal sizing shifts */
    >div {
      width: 100% !important;
      max-width: 100%;
    }

    .card {
      width: 100% !important;
      max-width: 100%;
      transform: translate3d(0, 0, 0);
      backface-visibility: hidden;
    }
  }

  /* Force GPU compositing on track */
  .carousel :global(.slick-track) {
    will-change: transform;
    transform: translate3d(0, 0, 0);
  }

  /* More aggressive position control during transitions */
  &[data-transitioning="true"] {
    :global(.slick-slide) {
      contain: strict;

      >div,
      .card,
      .media-container {
        contain: strict;
      }
    }

    /* Force fixed dimensions during transitions */
    .card {
      transition: none !important;
      width: 100% !important;
    }
  }

  /* Add additional space on the right when last slides are visible */
  &[data-last-slide-visible="true"] {
    .carousel :global(.slick-list) {
      padding-right: 35% !important;
      /* Increased from 25% to 35% for better visibility */
    }
  }

  /* Ensure the last-slide-visible class applies the padding */
  .last-slide-visible :global(.slick-list) {
    padding-right: 35% !important;
  }

  /* Specific adjustment for laptop screens */
  @media (max-width: 1440px) {
    &[data-last-slide-visible="true"] {
      .carousel :global(.slick-list) {
        padding-right: 45% !important;
        /* Even more padding for laptop screens */
      }
    }

    .last-slide-visible :global(.slick-list) {
      padding-right: 45% !important;
    }
  }
}

/* Resize guard */
.container[data-resizing="true"] .carousel * {
  transition: none !important;
  animation: none !important;
}

.container[data-resizing="true"] .carousel :global(.slick-track) {
  transition: none !important;
}

/* Split title/desc on wider containers */
@container (min-width: 900px) {

  .container .max-content .header .header-content .title,
  .container .max-content .header .header-content .description {
    width: 40%;
  }
}

/* Split title/desc on wider containers - adjust width percentage for tablet */
@container (min-width: 900px) and (max-width: 1200px) {

  .container .max-content .header .header-content .title,
  .container .max-content .header .header-content .description {
    width: 80%;
    /* Increased from 60% to 80% for tablet-sized containers */
  }
}

/* --------------------- Media Height --------------------- */
.slider-parent {
  --media-h: 350px;
  position: relative;
  /* Base padding will be adjusted by container queries */
}

@media (max-width: #{$composer-tablet-width}) {
  .slider-parent {
    --media-h: clamp(190px, 48vw, 260px);
  }
}

@media (max-width: #{$composer-phone-width}) {
  .slider-parent {
    --media-h: clamp(170px, 52vw, 220px);
  }
}

/* --------------------- Slider --------------------- */
.slider-parent {
  overflow: visible;

  .carousel {
    width: auto;
    padding-bottom: var(--composer-gap-lg);

    :global(.slick-track) {
      display: flex !important;
      will-change: transform;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      transition: transform var(--slide-speed) cubic-bezier(.16, 1, .3, 1) !important;
    }

    .slick-list {
      overflow: hidden;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      contain: paint layout;
      will-change: transform;
      transform: translate3d(0, 0, 0);
    }

    /* Lock padding to consistent values */
    :global(.slick-slide) .card {
      padding: var(--composer-gap-md) var(--composer-gap-sm) 0;
      width: 100% !important;
    }

    :global(.slick-slide:first-child) .card {
      padding-left: 0;
    }

    :global(.slick-slide:last-child).card {
      padding-right: 0 !important;
    }

    .slick-slide {
      float: none !important;
      display: block !important;
      min-width: 0;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      will-change: transform;

      >div {
        display: block;
        padding: 0;
        width: 100%;
      }
    }

    /* --- Card --- */
    .card {
      display: flex;
      flex-direction: column;
      width: 100% !important;
      /* Force consistent width */
      height: 100%;
      overflow: hidden;
      /* Contain any internal overflow */
      will-change: transform;
      backface-visibility: hidden;
      transform: translate3d(0, 0, 0);
      /* Better than translateZ for compositing */
      justify-content: flex-start;
      align-items: flex-start;
      box-sizing: border-box;

      .media-container {
        width: 100% !important;
        height: var(--media-h);
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: var(--composer-border-radius-xl);
        margin-bottom: var(--composer-gap-md);
        will-change: transform;
        backface-visibility: hidden;
        transform: translate3d(0, 0, 0);
        contain: paint layout size;

        :global(video),
        :global(img) {
          width: 100% !important;
          height: 100% !important;
          object-fit: cover !important;
          display: block;
          backface-visibility: hidden;
          transform: translate3d(0, 0, 0);
          contain: strict;
          margin: 0 !important;
          padding: 0 !important;
        }
      }

      .content-container {
        opacity: 1;
        padding-top: 0;
        gap: var(--composer-gap-md);
        display: flex;
        flex-direction: column;
        width: 100% !important;

        .content-title {
          margin: 0;
          color: var(--composer-font-color-primary);
          font-weight: bold;
          font-size: clamp(18px, 2.6vw, 24px);
          line-height: 1.3;
          text-align: left !important;
          overflow-wrap: anywhere;
        }

        .content-description {
          color: var(--composer-tertiary-color);
          font-size: clamp(14px, 2vw, 18px);
          line-height: 1.6;
          margin: 0;
          overflow-wrap: anywhere;
        }
      }
    }
  }

  .carousel a {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .carousel a .card {
    cursor: pointer;
  }

  /* -------- Custom Dots (her kart için 1 dot) -------- */
  .dot-nav {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-top: var(--composer-gap-sm);
    user-select: none;

    /* Hide dots on desktop */
    @media (min-width: 1024px) {
      display: none;
    }
  }

  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: var(--composer-primary-color);
    /* Use solid primary color for dots */
    border: none;
    /* Remove border completely */
    cursor: pointer;
    transition: transform .12s ease, opacity .12s ease;
    opacity: 0.4;
    /* Make inactive dots semi-transparent */
  }

  .dot:hover {
    transform: scale(1.1);
    opacity: 0.7;
  }

  .dot[aria-current="true"] {
    opacity: 1;
    /* Full opacity for active dot */
    transform: scale(1.15);
  }
}

/* --------------------- Responsive --------------------- */
/* Adjust for small viewports regardless of container size */
@media (max-width: #{$composer-tablet-width}) {
  .container .max-content .header .header-content {
    max-width: clamp(720px, 95vw, 1440px);
    /* Increased from 85vw to 95vw for wider display */
  }

  .container .max-content .header .header-content .title {
    font-size: clamp(24px, 6.8vw, 40px);
  }

  .slider-parent .carousel .card .content-container .content-title {
    font-size: clamp(16px, 5.2vw, 100px);
  }

  .slider-parent .carousel .card .content-container .content-description {
    font-size: clamp(13px, 4.2vw, 1000px);
  }
}

@media (max-width: #{$composer-phone-width}) {
  .container .max-content .header .header-content .title {
    font-size: clamp(22px, 7.4vw, 36px);
  }

  .slider-parent .carousel .card .content-container .content-title {
    font-size: clamp(15px, 5.8vw, 19px);
  }

  .slider-parent .carousel .card .content-container .content-description {
    font-size: clamp(13px, 4.6vw, 16px);
  }
}

/* Motion preferences */
@media (prefers-reduced-motion: reduce) {
  .container .carousel * {
    transition: none !important;
    animation: none !important;
  }
}